2.boolean equals(Object anObject)方法:按照字典序比较
equals 比较两个引用
String类重写了父类Object中的equals方法,Object中equals默认按照==比较,String重写equals 方法后,
按照如下规则进行比较,比如:是.equals(s2)

 public boolean equals(Object anObject) {
   //1.先检测this和anObjet是否为同一个对象比较,如果是返回true
  if(this==anObject) {
   return true;
  }
 
//2.检测anObject是否为String类型的对象,如果是继续比较,否则返回false
  if(anObject instanceof String) {
 //将anObject向下转型为String类型对象
 String anotherString = (string)anObject;
 int n = value.length;

//3.this和Object两个字符串的长度是否相同,是继续比较,否则返回false
 if(n == anotherString.value.length) {
   char v1 [] = value;
  char v2 [] = anotherString.value;
  int i = 0;

 //4.按照字典序,从前往后逐个字符进行比较

   while (n--!=0) {
   if(v1[i] != v2[i])
    return false;
   i++;
   }
  return true;
  }
 }
return false;
